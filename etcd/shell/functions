#!/bin/sh

parse_args() {
	local token
	while (( ${#extension_args} ))
	do
    array shift extension_args into token
		case "${token}" in
			(etcd) true ;; # Ignore the first CLI parameter
		  (client_ip) array shift extension_args into client_ip ;;
	    (peer_ip) array shift extension_args into peer_ip ;;
      (peer_client_port) array shift extension_args into peer_client_port ;;
		  (peer_server_port) array shift extension_args into peer_server_port ;;
	    (client_port) array shift extension_args into client_port;;
      (server_port) array shift extension_args into server_port ;;
		  (peers) array shift extension_args into peers ;;
	    (*) log fail "Unknown command line argument ${token}" ;;
    esac
  done
}

etcd_prefetch() {
	package define \
		base_url "https://github.com/coreos/etcd/releases/download/v${package_version}" \
    file "etcd-v${package_version}-Linux-x86_64.${archive_format}" \
    dir "etcd-v${package_version}-Linux-x86_64" \
		checksum_url "https://127.0.0.1/" # ... 
}

etcd_configure() {
	true # nothing to do
}

etcd_build() {
	true # nothing to do
}

etcd_install() {
	trace_filter etcd || set -o xtrace
	mkdir -p ${install_path}/bin
	chmod 0755 ${install_path}/bin

	for file in etcd etcdctl
	do 
		cp ./${file} ${install_path}/bin/${file}
		chmod a+x ${install_path}/bin/${file}
	done
}

etcd_postinstall() {
	mkdir -p /etc/etcd/

	if ! file exists /etc/etcd/etcd.conf
	then
		template install etcd/etcd.conf \
			to /etc/etcd/etcd.conf \
			mode 0644
	fi

	if ! file exists /etc/init.d/etcd
	then
		template install etcd/init.d \
			to /etc/init.d/etcd \
			owner root:root \
			mode 0755
	fi
}

read_pidfile() {
	if [[ -s ${pid_file} ]]
	then pid=$(head -1 ${pid_file})
	else pid=0
	fi

	[[ -n "${pid}" ]] && (( pid > 0 )) || pid=0
}

peers_config_string() {
	if [[ -n "${peers}" ]]
	then echo "\"${peers}\""
	else return 0
	fi
}
