#!/bin/sh

# HAProxy Configuration File
global
  user haproxy
  group haproxy
  daemon
  stats socket /var/run/haproxy/haproxy.stat mode 0600
  log 127.0.0.1 local1 notice
  maxconn 15000
  ulimit-n 80013
  pidfile /var/run/haproxy/haproxy.pid
  spread-checks 5
  ca-base /etc/ssl
  crt-base /etc/ssl
  # debug

defaults
  log global
  mode http
  contimeout 4000
  clitimeout 4200
  srvtimeout 4300
  balance roundrobin

  option httplog
  option abortonclose
  option httpclose
  # Set X-Forwarded-For header.
  option forwardfor
  option http-server-close
  retries 3
  option redispatch
  http-check siable-on-404

  # Configure Timeouts
  timeout check 2000
  timeout connect 5s
  timeout client 30s
  timeout server 30s
  # Long timeout for WebSocket connections.
  timeout tunnel 1h

  stats enable
  stats uri /services/haproxy/stats
  stats realm Haproxy\ Statistics
  stats auth admin:nimda

  monitor-uri /haproxy/monitor

frontend public
  bind :80
  # Redirect all HTTP traffic to HTTPS
  redirect scheme https if !{ ssl_fc }
  # HTTPS
  # Example with CA certificate bundle
  # bind :443 ssl crt cert.pem ca-file bundle.crt
  # Example without CA certification bunch

  # If you wanted to specifically send websocket traffic somewhere different
  # you'd use an ACL like { hdr(Upgrade) -i WebSocket }. 
  use_backend gopher if { path_beg /go/pher/ }
  bind :443 ssl crt snakeoil.pem
  default_backend nginx

backend nginx
  # Tell the backend that this is a secure connection,
  # even though it's getting plain HTTP.
  reqadd X-Forwarded-Proto:\ https
 
  balance leastconn
  # Check by hitting a page intended for this use.
  option httpchk GET /isrunning
  timeout check 500ms
  # Wait 500ms between checks.
  server nginx1 127.0.0.1:8080
  server nginx1 127.0.0.1:8081

backend gopher
  # Tell the backend that this is a secure connection, even though plain HTTP.
  reqadd X-Forwarded-Proto:\ https
 
  balance leastconn
  # Check by hitting a page intended for this use.
  option httpchk GET /go/pher/health/check
  timeout check 500ms
  # Wait 500ms between checks.
  server gopher1 127.0.0.1:10080 check inter 500ms
  server gopher1 127.0.0.1:10081 check inter 500ms
  server gopher1 127.0.0.1:10082 check inter 500ms
  server gopher1 127.0.0.1:10083 check inter 500ms

# For displaying HAProxy statistics.
frontend stats
  # HTTPS only.
  # Example with CA certificate bundle
  # bind :1936 ssl crt star.mysite.com.pem ca-file gd_bundle.crt
  # Example without CA certification bunch
  bind :1936 ssl crt star.mysite.com.pem
  default_backend stats
 
backend stats
  stats enable
  stats hide-version
  stats realm Haproxy\ Statistics
  stats uri /
  stats auth admin:n1md@

